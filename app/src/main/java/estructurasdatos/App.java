/*
 * This source file was generated by the Gradle 'init' task
 */
package estructurasdatos;

import java.util.Scanner;
import java.util.InputMismatchException;

public class App {
    
    public static void main(String[] args) {
        
        try {
            
            // Variables numericas

            // Crear una variable
            // [Tipo de dato] [Nombre de la variable] = [Valor inicial];

            byte byteVariable = 10; // 1 byte
            short shortVariable = 1000; // 2 bytes
            int intVariable = 100000; // 4 bytes
            long longVariable = 10000000000L; // 8 bytes

            // Variables decimales

            float floatVariable = 10.5f; // 4 bytes
            double doubleVariable = 100.99; // 8 bytes

            // Variables booleanas

            boolean booleanVariable = true; // 1 bit
            boolean anotherBooleanVariable = false; // 1 bit

            // Variables de caracteres

            char charVariable = 'A'; // 2 bytes
            String stringVariable = "Hello, World!"; // Referencia a un objeto

            // Solicitar valores
            // Se importa e instancia el objeto scanner para leer la entrada del usuario
            Scanner scanner = new Scanner(System.in);

            int edadUsuario = 0;
            System.out.print("Ingrese su edad: "); // Imprimir mensaje al usuario
            // Leer la entrada del usuario y convertirla a un entero
            edadUsuario = scanner.nextInt();
            scanner.nextLine(); // Consumir el salto de línea pendiente

            int numeroUsuario = 0;
            System.out.print("Ingrese un numero: ");
            numeroUsuario = Integer.parseInt(scanner.nextLine());

            // Conversiones directas
            // Convertir un String a numero
            
            // [Nombre de la variable] = Integer.parseInt[Valor a convertir];
            // Short.parseShort(), Long.parseLong(), Float.parseFloat(), Double.parseDouble()

            // [Nombre de la variable] = String.valueOf[Valor a convertir];

            // Casteo de tipos
            // [Nombre de la variable] = (Tipo de dato de la variable)[Valor a convertir];


            String nombreUsuario = "";
            System.out.print("Ingrese su nombre: ");
            nombreUsuario = scanner.nextLine();

            System.out.println
            ("Hola " + nombreUsuario + ", tienes " + edadUsuario + " años y has ingresado el número " + numeroUsuario + ".");


            // Condiciones
            // if, else if, else

            if (edadUsuario < 0) {
                throw new IllegalArgumentException("La edad no puede ser negativa.");
            }
            else if (edadUsuario > 0 && edadUsuario < 18) {
                System.out.println("Eres menor de edad.");
            } 
            else if (edadUsuario >= 18 && edadUsuario < 65) {
                System.out.println("Eres adulto.");
            } 
            else {
                System.out.println("Eres adulto mayor.");
            }

            // Switch
            switch (numeroUsuario) {
                case 1:
                    System.out.println("Has ingresado el número uno.");
                    break;
                case 2:
                    System.out.println("Has ingresado el número dos.");
                    break;
                case 3:
                    System.out.println("Has ingresado el número tres.");
                    break;
                default:
                    System.out.println("Número no reconocido.");
            }

            // Bucles
            // for, while, do-while

            // while ( [Condición] ) { [Instrucciones] }
            
            int i = 0;
            while (true){

                if (i++ == 10) {
                    System.out.println("El valor de i es: " + i);
                    break;
                }
                
                System.out.println("El valor de i es: " + i);
                

            }

            // for ( [Inicialización]; [Condición]; [Incremento/Decremento] ) { [Instrucciones] }

            for(int j = 0; j < 10; j++) {
                System.out.println("El valor de j es: " + j);
            }

            // do { [Instrucciones] } while ( [Condición] );
            // Se ejecuta al menos una vez, independientemente de la condición
            do{

                System.out.println("Este es un bucle do-while. Se ejecutará al menos una vez.");
                System.out.print("¿Desea continuar? (s/n): ");
                String respuesta = scanner.nextLine();
                
                if (!respuesta.equalsIgnoreCase("s")) {
                    System.out.println("Saliendo del bucle do-while.");
                    break;
                }

            }while(true);

            // Vectores y matrices
            // Un vector es una estructura de datos que almacena una colección de elementos del mismo tipo

            // [Tipo de dato] [] [Nombre del vector] = new [Tipo de dato][Tamaño del vector];

            String[] array = new String[5];

            // Una matriz es una estructura de datos que almacena una colección de elementos en forma de tabla

            // [Tipo de dato] [] [] [Nombre de la matriz] = new [Tipo de dato][Filas][Columnas];

            int [] [] matriz = new int[3][2];

            // Asignar valores al vector

            for (int k = 0; k < array.length; k++) {
                array[k] = "Elemento " + (k + 1);
            }

            // Consultar valor vector

            System.out.println("Contenido del vector: " + array[array.length - 1]);

            for (int k = 0; k < matriz.length; k++) {
                for (int l = 0; l < matriz[k].length; l++) {
                    matriz[k][l] = k + l; // Asignar un valor de ejemplo
                }
            }

            // Consultar valor matriz

            System.out.println("Contenido de la matriz: " + matriz[matriz.length - 1][matriz[0].length - 1]);


        } 

        // Control de excepciones
        // Lanzar excepciones con throw
        // throw new [Tipo de excepción]("Mensaje de error");
        catch (IllegalArgumentException iae) {
            System.out.println("Error: " + iae.getMessage());
        }
        catch (InputMismatchException ime){
            System.out.println("Error: Input mismatch. Please enter a valid input.");
        }
        catch (Exception e) {
            System.out.println("Error: An unexpected error occurred. " + e.getMessage());
        }       

    }
}
